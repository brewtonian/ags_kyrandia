// main global script file

// called when the game starts, before the first room is loaded
function game_start()
{
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
}

// called when a key is pressed
function on_key_press(eKeyCode keycode)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyCtrlQ)
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (keycode == eKeyCtrlS)
  {
    // Ctrl-S will give the player all defined inventory items
    Debug(0, 0);
  }
  else if (keycode == eKeyCtrlV)
  {
    // Ctrl-V will show game engine version and build date
    Debug(1, 0);
  }
  else if (keycode == eKeyCtrlA)
  {
    // Ctrl-A will show walkable areas
    Debug(2, 0);
  }
  else if (keycode == eKeyCtrlX)
  {
    // Ctrl-X will let the player teleport to any room
    Debug(3, 0);
  }
}

/*
// handled by OneClickHandler

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
}
*/

function dialog_request(int param) {
}




//
// KYRANDIA TEMPLATE OPTIONS GUI 
//

function ButtonOptions_OnClick(GUIControl *control, MouseButton button)
{
  aTick.Play();
  gPanel.Clickable = false;
  gOptions.Visible = true;
}

function ButtonResume_OnClick(GUIControl *control, MouseButton button)
{
  aTick.Play();
  gPanel.Clickable = true;
  gOptions.Visible = false;
}


function ButtonQuitGame_OnClick(GUIControl *control, MouseButton button)
{
  aTick.Play();
  QuitGame(1);
}

function ButtonSaveGame_OnClick(GUIControl *control, MouseButton button)
{
  aTick.Play();
  SaveGameDialog();
}

function ButtonLoadGame_OnClick(GUIControl *control, MouseButton button)
{
  aTick.Play();
  RestoreGameDialog();
}
function ButtonAmuletLeft_OnClick(GUIControl *control, MouseButton button)
{
  player.Say("Left Amulet");
}

function ButtonAmuletRight_OnClick(GUIControl *control, MouseButton button)
{
  player.Say("Right Amulet");
}

function ButtonAmuletTop_OnClick(GUIControl *control, MouseButton button)
{
  player.Say("Top Amulet");
}

function ButtonAmuletBottom_OnClick(GUIControl *control, MouseButton button)
{
  player.Say("Bottom Amulet");
}
